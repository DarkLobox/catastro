package vista;

import config.Coneccion;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLIntegrityConstraintViolationException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class VistaPersona extends javax.swing.JFrame {
    Coneccion con = new Coneccion();
    Connection cn;
    PreparedStatement st;
    ResultSet rs;
    DefaultTableModel modelo;
    String perCodSelect;
    int flag = 0;
    int rowTable;

    public VistaPersona() {
        initComponents();
        setLocationRelativeTo(null);
        listarVivCod();
        listarPerCod();
        listar();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        inputPerDni = new javax.swing.JTextField();
        cboxVivCod = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        inputPerCod = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        inputPerOd = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        inputPerNom = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        inputPerIng = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        inputPerApe = new javax.swing.JTextField();
        cboxPerCod = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablePersonas = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        btnAdicionar = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        btnInactivar = new javax.swing.JButton();
        btnReactivar = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();

        jTextField1.setText("jTextField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("PERSONA");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Registro de Persona"));

        jLabel1.setText("Dni de Persona:");

        jLabel2.setText("Codigo de Vivienda:");

        inputPerDni.setEnabled(false);
        inputPerDni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputPerDniActionPerformed(evt);
            }
        });

        cboxVivCod.setEnabled(false);
        cboxVivCod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboxVivCodActionPerformed(evt);
            }
        });

        jLabel3.setText("Codigo de Persona:");

        inputPerCod.setEnabled(false);

        jLabel4.setText("Comentario de Persona:");

        inputPerOd.setColumns(20);
        inputPerOd.setRows(5);
        inputPerOd.setEnabled(false);
        jScrollPane2.setViewportView(inputPerOd);

        jLabel5.setText("Nombres de Persona:");

        inputPerNom.setEnabled(false);

        jLabel6.setText("Codigo de Persona Conviviente:");

        jLabel7.setText("Ingreso de Persona:");

        inputPerIng.setEnabled(false);

        jLabel8.setText("Apellidos de Persona:");

        inputPerApe.setEnabled(false);

        cboxPerCod.setEnabled(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4)
                    .addComponent(jLabel8))
                .addGap(51, 51, 51)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(cboxPerCod, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(inputPerApe, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(cboxVivCod, javax.swing.GroupLayout.Alignment.LEADING, 0, 186, Short.MAX_VALUE)
                        .addComponent(inputPerDni, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE)
                        .addComponent(inputPerCod, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(inputPerNom, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(inputPerIng, javax.swing.GroupLayout.Alignment.LEADING)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(inputPerCod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(inputPerDni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputPerNom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputPerApe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cboxPerCod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputPerIng, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(cboxVivCod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Tabla_Personas"));

        tablePersonas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo Persona", "Dni Persona", "Nombre Persona", "Apellido Persona", "Od Persona", "Codigo Persona C", "Ingreso Persona", "Codigo Vivienda", "Estado Persona"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablePersonas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablePersonasMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablePersonas);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(10, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Operaciones"));

        btnAdicionar.setText("Adicionar");
        btnAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarActionPerformed(evt);
            }
        });

        btnModificar.setText("Modificar");
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnInactivar.setText("Inactivar");
        btnInactivar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInactivarActionPerformed(evt);
            }
        });

        btnReactivar.setText("Reactivar");
        btnReactivar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReactivarActionPerformed(evt);
            }
        });

        btnActualizar.setText("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        btnSalir.setText("Salir");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(280, 280, 280)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnInactivar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnAdicionar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnModificar)
                    .addComponent(btnReactivar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnActualizar))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnCancelar))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(btnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(305, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdicionar)
                    .addComponent(btnModificar)
                    .addComponent(btnEliminar)
                    .addComponent(btnCancelar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnInactivar)
                    .addComponent(btnReactivar)
                    .addComponent(btnActualizar)
                    .addComponent(btnSalir))
                .addGap(0, 12, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void inputPerDniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputPerDniActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputPerDniActionPerformed

    private void cboxVivCodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboxVivCodActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboxVivCodActionPerformed

    private void btnAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarActionPerformed
        inputPerCod.setEnabled(false);
        inputPerDni.setEnabled(true);
        inputPerNom.setEnabled(true);
        inputPerApe.setEnabled(true);
        cboxPerCod.setEnabled(true);
        inputPerIng.setEnabled(true);
        inputPerOd.setEnabled(true);
        cboxVivCod.setEnabled(true);
        limpiarInputs();
        flag = 1;
    }//GEN-LAST:event_btnAdicionarActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        if(perCodSelect.compareTo("")!=0){
            inputPerCod.setEnabled(false);
            inputPerDni.setEnabled(true);
            inputPerNom.setEnabled(true);
            inputPerApe.setEnabled(true);
            cboxPerCod.setEnabled(true);
            inputPerIng.setEnabled(true);
            inputPerOd.setEnabled(true);
            cboxVivCod.setEnabled(true);
            llenarDatos();
            flag = 2;
        }
    }//GEN-LAST:event_btnModificarActionPerformed

    private void tablePersonasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablePersonasMouseClicked
        rowTable = tablePersonas.getSelectedRow();
        if (rowTable == -1) {
            JOptionPane.showMessageDialog(null, "No se Selecciono");
        }
        else {
            perCodSelect = tablePersonas.getValueAt(rowTable, 0).toString();
            System.out.println("percodselect: " + perCodSelect);
        }
    }//GEN-LAST:event_tablePersonasMouseClicked

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        if(perCodSelect.compareTo("")!=0){
            inputPerCod.setEnabled(false);
            inputPerDni.setEnabled(false);
            inputPerNom.setEnabled(false);
            inputPerApe.setEnabled(false);
            cboxPerCod.setEnabled(false);
            inputPerIng.setEnabled(false);
            inputPerOd.setEnabled(false);
            cboxVivCod.setEnabled(false);
            llenarDatos();
            flag = 3;
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        inputPerCod.setEnabled(false);
        inputPerDni.setEnabled(false);
        inputPerNom.setEnabled(false);
        inputPerApe.setEnabled(false);
        cboxPerCod.setEnabled(false);
        inputPerIng.setEnabled(false);
        inputPerOd.setEnabled(false);
        cboxVivCod.setEnabled(false);
        limpiarInputs();
        flag = 0;
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnInactivarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInactivarActionPerformed
        if(perCodSelect.compareTo("")!=0){
            inputPerCod.setEnabled(false);
            inputPerDni.setEnabled(false);
            inputPerNom.setEnabled(false);
            inputPerApe.setEnabled(false);
            cboxPerCod.setEnabled(false);
            inputPerIng.setEnabled(false);
            inputPerOd.setEnabled(false);
            cboxVivCod.setEnabled(false);
            llenarDatos();
            flag = 4;
        }
    }//GEN-LAST:event_btnInactivarActionPerformed

    private void btnReactivarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReactivarActionPerformed
        if(perCodSelect.compareTo("")!=0){
            inputPerCod.setEnabled(false);
            inputPerDni.setEnabled(false);
            inputPerNom.setEnabled(false);
            inputPerApe.setEnabled(false);
            cboxPerCod.setEnabled(false);
            inputPerIng.setEnabled(false);
            inputPerOd.setEnabled(false);
            cboxVivCod.setEnabled(false);
            llenarDatos();
            flag = 5;
        }
    }//GEN-LAST:event_btnReactivarActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        if(flag==0){
            JOptionPane.showMessageDialog(null, "Ninguna Opcion Seleccionada");
        }
        if(flag==1){
            String perDni = inputPerDni.getText();
            if (perDni.equals("")) {
                JOptionPane.showMessageDialog(null, "Complete los datos");
            } 
            else {
                try {
                    cn = con.getConeccion();
                    st = cn.prepareStatement("INSERT INTO personas (PerDni, PerNom, PerApe, PerOd, PerCodC, PerIng, VivCod, PerEst) VALUES (?, ?, ?, ?, ?, ?, ?, ?)");
                    st.setString(1, perDni);
                    st.setString(2, inputPerNom.getText());
                    st.setString(3, inputPerApe.getText());
                    st.setString(4, inputPerOd.getText());
                    if(cboxPerCod.getSelectedItem().toString().compareTo("")==0){
                        st.setNull(5, java.sql.Types.NULL);   
                    }
                    else{
                        st.setString(5, cboxPerCod.getSelectedItem().toString());
                    }
                    st.setString(6, inputPerIng.getText());
                    st.setString(7, cboxVivCod.getSelectedItem().toString());
                    st.setString(8, "A");
                    st.executeUpdate();
                    //limpiarInputs();
                    actualizar();
                } catch (Exception e) {
                    System.out.println("Error: " + e);
                }
            }
        }
        if(flag==2){
            String perDni = inputPerDni.getText();
            if (perDni.equals("") || perCodSelect.equals("")) {
                JOptionPane.showMessageDialog(null, "No selecciono un municipio");
            } 
            else {
                try {
                    cn = con.getConeccion();
                    st = cn.prepareStatement("UPDATE personas SET PerDni = ?, PerNom = ?, PerApe = ?, PerOd = ?, PerCodC = ?, PerIng = ?, VivCod = ? WHERE PerCod = ?");
                    st.setString(1, perDni);
                    st.setString(2, inputPerNom.getText());
                    st.setString(3, inputPerApe.getText());
                    st.setString(4, inputPerOd.getText());
                    if(cboxPerCod.getSelectedItem().toString().compareTo("")==0){
                        st.setNull(5, java.sql.Types.NULL); 
                    }
                    else{
                        st.setString(5, cboxPerCod.getSelectedItem().toString());
                    }
                    st.setString(6, inputPerIng.getText());
                    st.setString(7, cboxVivCod.getSelectedItem().toString());
                    st.setString(8, perCodSelect);
                    st.executeUpdate();
                    //limpiarInputs();
                    actualizar();
                } catch (Exception e) {
                    System.out.println("Error: " + e);
                }
            }
        }
        if(flag==3){
            if (perCodSelect.equals("")) {
                JOptionPane.showMessageDialog(null, "No selecciono un municipio");
            } 
            else {
                try {
                    cn = con.getConeccion();
                    st = cn.prepareStatement("UPDATE personas SET PerEst = ? WHERE PerCod = ?");
                    st.setString(1, "*");
                    st.setString(2, perCodSelect);
                    st.executeUpdate();
                    //limpiarInputs();
                    actualizar();
                } catch (Exception e) {
                    if (e instanceof SQLIntegrityConstraintViolationException) {
                        JOptionPane.showMessageDialog(null, "Otros elementos hacen referencia al campo: " + perCodSelect);
                    }
                    System.out.println("Error: " + e);
                }
            }
        }
        if(flag==4){
            if (perCodSelect.equals("")) {
                JOptionPane.showMessageDialog(null, "No selecciono un municipio");
            } 
            else {
                try {
                    cn = con.getConeccion();
                    st = cn.prepareStatement("UPDATE personas SET PerEst = ? WHERE PerCod = ?");
                    st.setString(1, "I");
                    st.setString(2, perCodSelect);
                    st.executeUpdate();
                    //limpiarInputs();
                    actualizar();
                } catch (Exception e) {
                    System.out.println("Error: " + e);
                }
            }
        }
        if(flag==5){
            if (perCodSelect.equals("")) {
                JOptionPane.showMessageDialog(null, "No selecciono un municipio");
            } 
            else {
                try {
                    cn = con.getConeccion();
                    st = cn.prepareStatement("UPDATE personas SET PerEst = ? WHERE PerCod = ?");
                    st.setString(1, "A");
                    st.setString(2, perCodSelect);
                    st.executeUpdate();
                    //limpiarInputs();
                    actualizar();
                } catch (Exception e) {
                    System.out.println("Error: " + e);
                }
            }
        }
        
        inputPerCod.setEnabled(false);
        inputPerDni.setEnabled(false);
        inputPerNom.setEnabled(false);
        inputPerApe.setEnabled(false);
        inputPerIng.setEnabled(false);
        inputPerOd.setEnabled(false);
        cboxVivCod.setEnabled(false);
        cboxPerCod.setEnabled(false);
        flag = 0;
            
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        limpiarInputs();
        System.exit(0);
    }//GEN-LAST:event_btnSalirActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VistaPersona.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VistaPersona.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VistaPersona.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VistaPersona.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VistaPersona().setVisible(true);
            }
        });
    }
    void listarVivCod(){
        cboxVivCod.removeAllItems();
        try{
            cn = con.getConeccion();
            st = cn.prepareStatement("SELECT VivCod FROM viviendas");
            rs = st.executeQuery();
            while(rs.next()){
                cboxVivCod.addItem(rs.getString("VivCod"));
            }

        }catch(Exception e){
            System.out.println("Error: "+e);
        }
    }
    
    void listarPerCod(){
        cboxPerCod.removeAllItems();
        cboxPerCod.addItem("");
        try{
            cn = con.getConeccion();
            st = cn.prepareStatement("SELECT PerCod FROM personas");
            rs = st.executeQuery();
            
            while(rs.next()){
                cboxPerCod.addItem(rs.getString("PerCod"));
            }

        }catch(Exception e){
            System.out.println("Error: "+e);
        }
    }
    
    void actualizar(){
        limpiarTabla();
        listar();
    }

    void listar(){
        try{
            cn = con.getConeccion();
            st = cn.prepareStatement("SELECT * FROM personas");
            rs = st.executeQuery();
            Object [] personas = new Object[9];
            modelo = (DefaultTableModel) tablePersonas.getModel();
            while(rs.next()){
                personas[0] = rs.getString("PerCod");
                personas[1] = rs.getString("PerDni");
                personas[2] = rs.getString("PerNom");
                personas[3] = rs.getString("PerApe");
                personas[4] = rs.getString("PerOd");
                personas[5] = rs.getString("PerCodC");
                personas[6] = rs.getString("PerIng");
                personas[7] = rs.getString("VivCod");
                personas[8] = rs.getString("PerEst");
                modelo.addRow(personas);
            }
            tablePersonas.setModel(modelo);
        }catch(Exception e){
            System.out.println("Error: "+e);
        }
    }

    void limpiarInputs(){
        inputPerCod.setText("");
        inputPerDni.setText("");
        inputPerOd.setText("");
        inputPerNom.setText("");
        inputPerApe.setText("");
        inputPerIng.setText("");
        perCodSelect = "";
    }

    void limpiarTabla(){
        int count = tablePersonas.getRowCount()-1;
        for(int i=0;i<=count;i++){
            modelo.removeRow(0);
        }
    }
    
    private void llenarDatos(){
        inputPerCod.setText(perCodSelect);
        inputPerDni.setText(tablePersonas.getValueAt(rowTable, 1).toString());
        inputPerNom.setText(tablePersonas.getValueAt(rowTable, 2).toString());
        inputPerApe.setText(tablePersonas.getValueAt(rowTable, 3).toString());
        inputPerOd.setText(tablePersonas.getValueAt(rowTable, 4).toString());
        if(tablePersonas.getValueAt(rowTable, 5) == null){
            cboxPerCod.setSelectedItem("");
        }
        else{
            cboxPerCod.setSelectedItem(tablePersonas.getValueAt(rowTable, 5).toString());
        }
        inputPerIng.setText(tablePersonas.getValueAt(rowTable, 6).toString());  
        cboxVivCod.setSelectedItem(tablePersonas.getValueAt(rowTable, 7).toString());
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnAdicionar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnInactivar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnReactivar;
    private javax.swing.JButton btnSalir;
    private javax.swing.JComboBox<String> cboxPerCod;
    private javax.swing.JComboBox<String> cboxVivCod;
    private javax.swing.JTextField inputPerApe;
    private javax.swing.JTextField inputPerCod;
    private javax.swing.JTextField inputPerDni;
    private javax.swing.JTextField inputPerIng;
    private javax.swing.JTextField inputPerNom;
    private javax.swing.JTextArea inputPerOd;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTable tablePersonas;
    // End of variables declaration//GEN-END:variables
}
