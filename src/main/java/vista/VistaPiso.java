package vista;

import config.Coneccion;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLIntegrityConstraintViolationException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class VistaPiso extends javax.swing.JFrame {
    Coneccion con = new Coneccion();
    Connection cn;
    PreparedStatement st;
    ResultSet rs;
    DefaultTableModel modelo;
    String PisCodSelect;
    int flag = 0;
    int rowTable;

    public VistaPiso() {
        initComponents();
        setLocationRelativeTo(null);
        listarVivCod();
        listarPerCod();
        listar();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cboxPerCod = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        inputPisCod = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        inputPisOd = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        inputPisEsc = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        inputPisPue = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        inputPisMet = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        inputPisPla = new javax.swing.JTextField();
        cboxVivCod = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablePisos = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        btnAdicionar = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        btnInactivar = new javax.swing.JButton();
        btnReactivar = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();

        jTextField1.setText("jTextField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("PISO");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Registro de Piso"));

        jLabel1.setText("Codigo de Bloque Casa:");

        jLabel2.setText("Codigo de Persona:");

        cboxPerCod.setEnabled(false);
        cboxPerCod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboxPerCodActionPerformed(evt);
            }
        });

        jLabel3.setText("Codigo de Piso:");

        inputPisCod.setEnabled(false);

        jLabel4.setText("Comentario de Piso:");

        inputPisOd.setColumns(20);
        inputPisOd.setRows(5);
        inputPisOd.setEnabled(false);
        jScrollPane2.setViewportView(inputPisOd);

        jLabel5.setText("Escalera de Piso:");

        inputPisEsc.setEnabled(false);

        jLabel6.setText("Puerta de Piso:");

        inputPisPue.setEnabled(false);

        jLabel7.setText("Metros de Piso:");

        inputPisMet.setEnabled(false);

        jLabel8.setText("Planta de Piso:");

        inputPisPla.setEnabled(false);

        cboxVivCod.setEnabled(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4)
                    .addComponent(jLabel8))
                .addGap(51, 51, 51)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(cboxVivCod, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(inputPisPla, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(cboxPerCod, javax.swing.GroupLayout.Alignment.LEADING, 0, 186, Short.MAX_VALUE)
                        .addComponent(inputPisCod, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(inputPisEsc, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(inputPisPue, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(inputPisMet, javax.swing.GroupLayout.Alignment.LEADING)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(inputPisCod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cboxVivCod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputPisEsc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputPisPla, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputPisPue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputPisMet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(cboxPerCod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Tabla_Pisos"));

        tablePisos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo Piso", "Codigo Vivienda", "Escalera Piso", "Planta Piso", "Puerta Piso", "Metros Piso", "Od Piso", "Codigo Persona", "Estado Piso"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablePisos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablePisosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablePisos);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(10, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Operaciones"));

        btnAdicionar.setText("Adicionar");
        btnAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarActionPerformed(evt);
            }
        });

        btnModificar.setText("Modificar");
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnInactivar.setText("Inactivar");
        btnInactivar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInactivarActionPerformed(evt);
            }
        });

        btnReactivar.setText("Reactivar");
        btnReactivar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReactivarActionPerformed(evt);
            }
        });

        btnActualizar.setText("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        btnSalir.setText("Salir");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(253, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnInactivar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnAdicionar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnModificar)
                    .addComponent(btnReactivar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnActualizar))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnCancelar))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(btnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(238, 238, 238))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdicionar)
                    .addComponent(btnModificar)
                    .addComponent(btnEliminar)
                    .addComponent(btnCancelar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnInactivar)
                    .addComponent(btnReactivar)
                    .addComponent(btnActualizar)
                    .addComponent(btnSalir))
                .addGap(0, 12, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cboxPerCodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboxPerCodActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboxPerCodActionPerformed

    private void btnAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarActionPerformed
        inputPisCod.setEnabled(false);
        cboxVivCod.setEnabled(true);
        inputPisEsc.setEnabled(true);
        inputPisPla.setEnabled(true);
        inputPisPue.setEnabled(true);
        inputPisMet.setEnabled(true);
        inputPisOd.setEnabled(true);
        cboxPerCod.setEnabled(true);
        limpiarInputs();
        flag = 1;
    }//GEN-LAST:event_btnAdicionarActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        if(PisCodSelect.compareTo("")!=0){
            inputPisCod.setEnabled(false);
            cboxVivCod.setEnabled(true);
            inputPisEsc.setEnabled(true);
            inputPisPla.setEnabled(true);
            inputPisPue.setEnabled(true);
            inputPisMet.setEnabled(true);
            inputPisOd.setEnabled(true);
            cboxPerCod.setEnabled(true);
            llenarDatos();
            flag = 2;
        }
    }//GEN-LAST:event_btnModificarActionPerformed

    private void tablePisosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablePisosMouseClicked
        rowTable = tablePisos.getSelectedRow();
        if (rowTable == -1) {
            JOptionPane.showMessageDialog(null, "No se Selecciono");
        }
        else {
            PisCodSelect = tablePisos.getValueAt(rowTable, 0).toString();
        }
    }//GEN-LAST:event_tablePisosMouseClicked

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        if(PisCodSelect.compareTo("")!=0){
            inputPisCod.setEnabled(false);
            cboxVivCod.setEnabled(false);
            inputPisEsc.setEnabled(false);
            inputPisPla.setEnabled(false);
            inputPisPue.setEnabled(false);
            inputPisMet.setEnabled(false);
            inputPisOd.setEnabled(false);
            cboxPerCod.setEnabled(false);
            llenarDatos();
            flag = 3;
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        inputPisCod.setEnabled(false);
        cboxVivCod.setEnabled(false);
        inputPisEsc.setEnabled(false);
        inputPisPla.setEnabled(false);
        inputPisPue.setEnabled(false);
        inputPisMet.setEnabled(false);
        inputPisOd.setEnabled(false);
        cboxPerCod.setEnabled(false);
        limpiarInputs();
        flag = 0;
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnInactivarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInactivarActionPerformed
        if(PisCodSelect.compareTo("")!=0){
            inputPisCod.setEnabled(false);
            cboxVivCod.setEnabled(false);
            inputPisEsc.setEnabled(false);
            inputPisPla.setEnabled(false);
            inputPisPue.setEnabled(false);
            inputPisMet.setEnabled(false);
            inputPisOd.setEnabled(false);
            cboxPerCod.setEnabled(false);
            llenarDatos();
            flag = 4;
        }
    }//GEN-LAST:event_btnInactivarActionPerformed

    private void btnReactivarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReactivarActionPerformed
        if(PisCodSelect.compareTo("")!=0){
            inputPisCod.setEnabled(false);
            cboxVivCod.setEnabled(false);
            inputPisEsc.setEnabled(false);
            inputPisPla.setEnabled(false);
            inputPisPue.setEnabled(false);
            inputPisMet.setEnabled(false);
            inputPisOd.setEnabled(false);
            cboxPerCod.setEnabled(false);
            llenarDatos();
            flag = 5;
        }
    }//GEN-LAST:event_btnReactivarActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        if(flag==0){
            JOptionPane.showMessageDialog(null, "Ninguna Opcion Seleccionada");
        }
        if(flag==1){
            String vivCod = cboxVivCod.getSelectedItem().toString();
            if (vivCod.equals("")) {
                JOptionPane.showMessageDialog(null, "Complete los datos");
            } 
            else {
                try {
                    cn = con.getConeccion();
                    st = cn.prepareStatement("INSERT INTO pisos (VivCod, PisEsc, PisPla, PisPue, PisMet, PisOd, PerCod, PisEst) VALUES (?, ?, ?, ?, ?, ?, ?, ?)");
                    st.setString(1, vivCod);
                    st.setString(2, inputPisEsc.getText());
                    st.setString(3, inputPisPla.getText());
                    st.setString(4, inputPisPue.getText());
                    st.setString(5, inputPisMet.getText());
                    st.setString(6, inputPisOd.getText());
                    st.setString(7, cboxPerCod.getSelectedItem().toString());
                    st.setString(8, "A");
                    st.executeUpdate();
                    //limpiarInputs();
                    actualizar();
                } catch (Exception e) {
                    System.out.println("Error: " + e);
                }
            }
        }
        if(flag==2){
            String vivCod = cboxVivCod.getSelectedItem().toString();
            if (vivCod.equals("") || PisCodSelect.equals("")) {
                JOptionPane.showMessageDialog(null, "No selecciono un municipio");
            } 
            else {
                try {
                    cn = con.getConeccion();
                    st = cn.prepareStatement("UPDATE pisos SET VivCod = ?, PisEsc = ?, PisPla = ?, PisPue = ?, PisMet = ?, PisOd = ?, PerCod = ? WHERE PisCod = ?");
                    st.setString(1, vivCod);
                    st.setString(2, inputPisEsc.getText());
                    st.setString(3, inputPisPla.getText());
                    st.setString(4, inputPisPue.getText());
                    st.setString(5, inputPisMet.getText());
                    st.setString(6, inputPisOd.getText());
                    st.setString(7, cboxPerCod.getSelectedItem().toString());
                    st.setString(8, PisCodSelect);
                    st.executeUpdate();
                    //limpiarInputs();
                    actualizar();
                } catch (Exception e) {
                    System.out.println("Error: " + e);
                }
            }
        }
        if(flag==3){
            if (PisCodSelect.equals("")) {
                JOptionPane.showMessageDialog(null, "No selecciono un municipio");
            } 
            else {
                try {
                    cn = con.getConeccion();
                    st = cn.prepareStatement("UPDATE pisos SET PisEst = ? WHERE PisCod = ?");
                    st.setString(1, "*");
                    st.setString(2, PisCodSelect);
                    st.executeUpdate();
                    //limpiarInputs();
                    actualizar();
                } catch (Exception e) {
                    if (e instanceof SQLIntegrityConstraintViolationException) {
                        JOptionPane.showMessageDialog(null, "Otros elementos hacen referencia al campo: " + PisCodSelect);
                    }
                    System.out.println("Error: " + e);
                }
            }
        }
        if(flag==4){
            if (PisCodSelect.equals("")) {
                JOptionPane.showMessageDialog(null, "No selecciono un municipio");
            } 
            else {
                try {
                    cn = con.getConeccion();
                    st = cn.prepareStatement("UPDATE pisos SET PisEst = ? WHERE PisCod = ?");
                    st.setString(1, "I");
                    st.setString(2, PisCodSelect);
                    st.executeUpdate();
                    //limpiarInputs();
                    actualizar();
                } catch (Exception e) {
                    System.out.println("Error: " + e);
                }
            }
        }
        if(flag==5){
            if (PisCodSelect.equals("")) {
                JOptionPane.showMessageDialog(null, "No selecciono un municipio");
            } 
            else {
                try {
                    cn = con.getConeccion();
                    st = cn.prepareStatement("UPDATE pisos SET PisEst = ? WHERE PisCod = ?");
                    st.setString(1, "A");
                    st.setString(2, PisCodSelect);
                    st.executeUpdate();
                    //limpiarInputs();
                    actualizar();
                } catch (Exception e) {
                    System.out.println("Error: " + e);
                }
            }
        }
        
        inputPisCod.setEnabled(false);
        cboxVivCod.setEnabled(false);
        inputPisEsc.setEnabled(false);
        inputPisPla.setEnabled(false);
        inputPisPue.setEnabled(false);
        inputPisMet.setEnabled(false);
        inputPisOd.setEnabled(false);
        cboxPerCod.setEnabled(false);
        flag = 0;
            
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        limpiarInputs();
        System.exit(0);
    }//GEN-LAST:event_btnSalirActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VistaPiso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VistaPiso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VistaPiso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VistaPiso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VistaPiso().setVisible(true);
            }
        });
    }
    
    void listarVivCod(){
        cboxVivCod.removeAllItems();
        try{
            cn = con.getConeccion();
            st = cn.prepareStatement("SELECT VivCod FROM bloques_casas");
            rs = st.executeQuery();
            while(rs.next()){
                cboxVivCod.addItem(rs.getString("VivCod"));
            }

        }catch(Exception e){
            System.out.println("Error: "+e);
        }
    }
    
    void listarPerCod(){
        cboxPerCod.removeAllItems();
        try{
            cn = con.getConeccion();
            st = cn.prepareStatement("SELECT PerCod FROM personas");
            rs = st.executeQuery();
            while(rs.next()){
                cboxPerCod.addItem(rs.getString("PerCod"));
            }

        }catch(Exception e){
            System.out.println("Error: "+e);
        }
    }
    
    void actualizar(){
        limpiarTabla();
        listar();
    }

    void listar(){
        try{
            cn = con.getConeccion();
            st = cn.prepareStatement("SELECT * FROM pisos");
            rs = st.executeQuery();
            Object [] pisos = new Object[9];
            modelo = (DefaultTableModel) tablePisos.getModel();
            while(rs.next()){
                pisos[0] = rs.getString("PisCod");
                pisos[1] = rs.getString("VivCod");
                pisos[2] = rs.getString("PisEsc");
                pisos[3] = rs.getString("PisPla");
                pisos[4] = rs.getString("PisPue");
                pisos[5] = rs.getString("PisMet");
                pisos[6] = rs.getString("PisOd");
                pisos[7] = rs.getString("PerCod");
                pisos[8] = rs.getString("PisEst");
                modelo.addRow(pisos);
            }
            tablePisos.setModel(modelo);
        }catch(Exception e){
            System.out.println("Error: "+e);
        }
    }

    void limpiarInputs(){
        inputPisCod.setText("");
        inputPisOd.setText("");
        inputPisEsc.setText("");
        inputPisPla.setText("");
        inputPisPue.setText("");
        inputPisMet.setText("");
        PisCodSelect = "";
    }

    void limpiarTabla(){
        int count = tablePisos.getRowCount()-1;
        for(int i=0;i<=count;i++){
            modelo.removeRow(0);
        }
    }
    
    private void llenarDatos(){
        inputPisCod.setText(PisCodSelect);
        cboxVivCod.setSelectedItem(tablePisos.getValueAt(rowTable, 1).toString());
        inputPisEsc.setText(tablePisos.getValueAt(rowTable, 2).toString());
        inputPisPla.setText(tablePisos.getValueAt(rowTable, 3).toString());
        inputPisPue.setText(tablePisos.getValueAt(rowTable, 4).toString());
        inputPisMet.setText(tablePisos.getValueAt(rowTable, 5).toString());
        inputPisOd.setText(tablePisos.getValueAt(rowTable, 6).toString());
        cboxPerCod.setSelectedItem(tablePisos.getValueAt(rowTable, 7).toString());
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnAdicionar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnInactivar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnReactivar;
    private javax.swing.JButton btnSalir;
    private javax.swing.JComboBox<String> cboxPerCod;
    private javax.swing.JComboBox<String> cboxVivCod;
    private javax.swing.JTextField inputPisCod;
    private javax.swing.JTextField inputPisEsc;
    private javax.swing.JTextField inputPisMet;
    private javax.swing.JTextArea inputPisOd;
    private javax.swing.JTextField inputPisPla;
    private javax.swing.JTextField inputPisPue;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTable tablePisos;
    // End of variables declaration//GEN-END:variables
}
